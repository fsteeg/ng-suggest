"use strict";angular.module("ngSuggest",[]).value("version","0.0.1-pre"),angular.module("ngSuggest").directive("opensearchSuggest",["OpenSearchSuggestions",function(OpenSearchSuggestions){return{restrict:"A",scope:{api:"@opensearchSuggest",suggest:"=suggestFunction",jsonp:"@jsonp"},link:function(scope){scope.$watch("api",function(){scope.suggestions=new OpenSearchSuggestions({url:scope.api,jsonp:scope.jsonp})}),scope.suggest=function(value){var s=scope.suggestions.suggest(value);return s.then(function(suggestions){return suggestions.values})}}}}]),angular.module("ngSuggest").directive("seealsoServer",["SeeAlso",function(){return{restrict:"A",link:function(){}}}]),angular.module("ngSuggest").directive("suggestTypeahead",["OpenSearchSuggestions","$injector",function(OpenSearchSuggestions,$injector){return{restrict:"A",scope:{api:"@suggestTypeahead",jsonp:"@jsonp"},require:"ngModel",compile:function(element,attrs){function suggestLink(scope){scope.$watch("api",function(){scope.service=new OpenSearchSuggestions({url:scope.api,jsonp:scope.jsonp})}),scope.suggest=function(value){var s=scope.service.suggest(value);return s.then(function(suggestions){return suggestions.values})}}var typeaheadLink=function(){};if(!attrs.typeahead){if(!$injector.has("typeaheadDirective"))throw new Error("ui.bootstrap.typehead directive required!");var expr="item.label for item in suggest($viewValue) | filter:$viewValue";attrs.$set("typeahead",expr);var directive=$injector.get("typeaheadDirective")[0];typeaheadLink=directive.compile(element,attrs)}return function(scope,element,attrs,controller){suggestLink(scope,element,attrs,controller),typeaheadLink(scope,element,attrs,controller)}}}}]),angular.module("ngSuggest").factory("OpenSearchSuggestions",["$http","$q",function($http,$q){var transformSuggestions=function(data){var suggestions={query:data[0],values:[]};angular.isArray(data[2])||(data[2]=[]),angular.isArray(data[3])||(data[3]=[]);for(var i=0;i<data[1].length;i++)suggestions.values.push({label:data[1][i],description:data[2][i],url:data[3][i]});return suggestions},OpenSearchSuggestions=function(args){angular.isObject(args)||(args={url:args}),this.url=args.url,this.url&&-1==this.url.indexOf("{searchTerms}")&&(this.url+="{searchTerms}"),this.transform=args.transform?args.transform:transformSuggestions,this.jsonp="undefined"==typeof args.jsonp||""===args.jsonp?!0:!!args.jsonp};return OpenSearchSuggestions.prototype={suggest:function(searchTerms){if(!this.url)return $q.reject(null);var url=this.url.replace("{searchTerms}",decodeURIComponent(searchTerms));this.jsonp&&(url+="&callback=JSON_CALLBACK");var transform=this.transform;return $http.jsonp(url).then(function(response){try{return transform(response.data)}catch(e){return $q.reject(e)}},function(response){return $q.reject(response.data)})}},OpenSearchSuggestions}]),angular.module("ngSuggest").factory("SeeAlso",["OpenSearchSuggestions",function(OpenSearchSuggestions){function SeeAlso(args){angular.isObject(args)||(args={url:args}),args.url+="?id={searchTerms}&format=seealso",OpenSearchSuggestions.call(this,args)}return SeeAlso.prototype=new OpenSearchSuggestions,SeeAlso}]);